name: Documentation

on: [push, pull_request]

jobs:
  documentation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install sphinx sphinx-rtd-theme myst-parser
    
    - name: Check documentation files
      run: |
        echo "Checking documentation files..."
        
        # Check if README exists
        if [ -f "README.md" ]; then
          echo "‚úÖ README.md found"
        else
          echo "‚ùå README.md missing"
          exit 1
        fi
        
        # Check if CHANGELOG exists
        if [ -f "CHANGELOG.md" ]; then
          echo "‚úÖ CHANGELOG.md found"
        else
          echo "‚ö†Ô∏è CHANGELOG.md missing (recommended)"
        fi
        
        # Check if LICENSE exists
        if [ -f "LICENSE" ]; then
          echo "‚úÖ LICENSE found"
        else
          echo "‚ö†Ô∏è LICENSE missing (recommended)"
        fi
    
    - name: Validate markdown files
      run: |
        echo "Validating markdown files..."
        
        # Check for broken links in README
        if grep -r "http" README.md | grep -v "github.com" | grep -v "pypi.org"; then
          echo "‚ÑπÔ∏è Found external links in README (check manually)"
        else
          echo "‚úÖ No external links found in README"
        fi
        
        # Check for TODO/FIXME in documentation
        if grep -r "TODO\|FIXME" README.md CHANGELOG.md 2>/dev/null; then
          echo "‚ö†Ô∏è Found TODO/FIXME in documentation"
        else
          echo "‚úÖ No TODO/FIXME found in documentation"
        fi
    
    - name: Build documentation
      run: |
        echo "Building documentation..."
        
        # Create docs directory if it doesn't exist
        mkdir -p docs
        
        # Try to build Sphinx docs if conf.py exists
        if [ -f "docs/conf.py" ]; then
          echo "Building Sphinx documentation..."
          sphinx-build -b html docs docs/_build/html || echo "‚ö†Ô∏è Sphinx build failed (but continuing)"
        else
          echo "No Sphinx configuration found, creating basic docs..."
          
          # Create a simple index.html from README
          echo '<!DOCTYPE html>' > docs/index.html
          echo '<html>' >> docs/index.html
          echo '<head>' >> docs/index.html
          echo '    <title>Pi-Pages Documentation</title>' >> docs/index.html
          echo '    <meta charset="utf-8">' >> docs/index.html
          echo '    <style>' >> docs/index.html
          echo '        body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }' >> docs/index.html
          echo '        pre { background: #f4f4f4; padding: 10px; border-radius: 5px; }' >> docs/index.html
          echo '        code { background: #f4f4f4; padding: 2px 4px; border-radius: 3px; }' >> docs/index.html
          echo '    </style>' >> docs/index.html
          echo '</head>' >> docs/index.html
          echo '<body>' >> docs/index.html
          echo '    <h1>Pi-Pages Documentation</h1>' >> docs/index.html
          echo '    <p>Welcome to the Pi-Pages documentation.</p>' >> docs/index.html
          echo '    <p>For detailed information, please see the <a href="https://github.com/1devspace/office-screen">GitHub repository</a>.</p>' >> docs/index.html
          echo '</body>' >> docs/index.html
          echo '</html>' >> docs/index.html
          
          echo "‚úÖ Created basic documentation"
        fi
    
    - name: Check documentation size
      run: |
        echo "Checking documentation size..."
        
        if [ -f "README.md" ]; then
          readme_size=$(wc -l < README.md)
          echo "README.md: $readme_size lines"
          
          if [ "$readme_size" -lt 50 ]; then
            echo "‚ö†Ô∏è README.md is quite short (consider adding more details)"
          else
            echo "‚úÖ README.md has good content"
          fi
        fi
        
        if [ -f "CHANGELOG.md" ]; then
          changelog_size=$(wc -l < CHANGELOG.md)
          echo "CHANGELOG.md: $changelog_size lines"
        fi
    
    - name: Success summary
      run: |
        echo "## Documentation Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "‚úÖ **File Check**: Completed" >> $GITHUB_STEP_SUMMARY
        echo "‚úÖ **Markdown Validation**: Completed" >> $GITHUB_STEP_SUMMARY
        echo "‚úÖ **Documentation Build**: Completed" >> $GITHUB_STEP_SUMMARY
        echo "‚úÖ **Size Check**: Completed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "üéâ **Overall Status**: Documentation workflow completed!" >> $GITHUB_STEP_SUMMARY 