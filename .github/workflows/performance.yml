name: Performance Tests

on: [push, pull_request, schedule]

jobs:
  performance:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    
    services:
      chrome:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444
        options: >-
          --health-cmd "/opt/bin/health-check.sh"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y chromium-chromedriver
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-benchmark memory-profiler psutil
        pip install -e .
    
    - name: Run performance benchmarks
      run: |
        pytest tests/performance/ -v --benchmark-only --benchmark-sort=mean || true
    
    - name: Run load test
      run: |
        pytest tests/load/ -v --timeout=600 || true
    
    - name: Generate performance report
      run: |
        echo "## Performance Test Results" > performance-report.md
        echo "" >> performance-report.md
        echo "### Performance tests completed" >> performance-report.md
        echo "" >> performance-report.md
        echo "**Python Version**: ${{ matrix.python-version }}" >> performance-report.md
        echo "**Runner**: ${{ runner.os }}" >> performance-report.md
        echo "**Date**: $(date)" >> performance-report.md
    
    - name: Upload performance artifacts
      uses: actions/upload-artifact@v4
      with:
        name: performance-results-${{ matrix.python-version }}
        path: |
          .benchmarks/
          performance-report.md
    
    - name: Comment on PR with performance results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          let comment = '## Performance Test Results\n\n';
          
          try {
            const report = fs.readFileSync('performance-report.md', 'utf8');
            comment += report;
          } catch (e) {
            comment += 'Performance tests completed. Check artifacts for detailed results.';
          }
          
          comment += '\n\n---\n';
          comment += 'View detailed benchmark results in the Actions artifacts.';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          }); 